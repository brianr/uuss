#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
server_id = uuss___ENVIRONMENT__
app_id = 4245

uuss_port = 8484
uuss_games = __PRODUCT__
# dane

mq.server = __PRODUCT__-__ENVIRONMENT__:5672
mq.namespace = uuss___PRODUCT_____ENVIRONMENT__

# this can be mq or direct
# mq will put the message in an mq for later processing
# direct (or the mq processor) will directly open the user's
# state and add the message if this server is configured for
# the target game. If it is not, it will send the message on
# to the game's server, which must be set here as
# uums.GAME_uuss_server = HOST:PORT
uums.send_message_type = mq
uums.remote_games = 

# userstate
__PRODUCT___user_state.mysql_write = false
__PRODUCT___user_state.mongo_hosts = mongodb://__PRODUCT__-__ENVIRONMENT__:27017
__PRODUCT___user_state.mongo_hosts_rebal = mongodb://__PRODUCT__-__ENVIRONMENT__:27017
__PRODUCT___user_state.rebalancing = false
__PRODUCT___user_state.mongo_dbname = __PRODUCT__-__ENVIRONMENT__
__PRODUCT___user_state.mongo_buckets = 1
__PRODUCT___user_state.mc_servers = __PRODUCT__-__ENVIRONMENT__:11211/1
__PRODUCT___user_state.mc_namespace = __PRODUCT__-__ENVIRONMENT__
__PRODUCT___user_state.use_profiling = false
__PRODUCT___user_state.tmp_dir0 = /var/log/__PRODUCT___userstates

__PRODUCT___lock_memcache.namespace = __PRODUCT_____ENVIRONMENT___lock
__PRODUCT___lock_memcache.server_list = __PRODUCT__-__ENVIRONMENT__:11211/1

sqlalchemy.__PRODUCT__.url = mysql://quiz:qaz@__PRODUCT__-__ENVIRONMENT__/__PRODUCT__

sqlalchemy.__PRODUCT___userstate.shard_count = 1
sqlalchemy.__PRODUCT___userstate.shard_count_rebal = 1
sqlalchemy.__PRODUCT___userstate.rebalancing = false

sqlalchemy.__PRODUCT___userstate0.url = mysql://quiz:qaz@__PRODUCT__-__ENVIRONMENT__/__PRODUCT__
sqlalchemy.__PRODUCT___userstate0.pool_recycle = 3600
sqlalchemy.__PRODUCT___userstate0.convert_unicode = true
sqlalchemy.__PRODUCT___userstate0.echo = false

sqlalchemy.__PRODUCT___userstate_read0.url = mysql://quiz:qaz@__PRODUCT__-__ENVIRONMENT__/__PRODUCT__
sqlalchemy.__PRODUCT___userstate_read0.pool_recycle = 3600
sqlalchemy.__PRODUCT___userstate_read0.convert_unicode = true
sqlalchemy.__PRODUCT___userstate_read0.echo = false

# Logging configuration
[loggers]
keys = root, userstate_multi, uuss_connection, uuss, main, lolapps_gevent, multithreading, dane_userstate

[handlers]
#keys = console
keys = file

[handler_file]
class = handlers.WatchedFileHandler
args = ('/var/log/lolapps/uuss.__ENVIRONMENT__.__PRODUCT__.log',)
level = NOTSET
formatter = generic

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = file

[logger_lolapps_gevent]
level = INFO
handlers =
qualname = lolapps.common.gevent

[logger_main]
level = INFO
handlers =
qualname = __main__

[logger_userstate_multi]
level = INFO
handlers =
qualname = lolapps.common.userstate_multi

[logger_uuss]
level = INFO
handlers =
qualname = lolapps.common.uuss

[logger_multithreading]
level = INFO
handlers =
qualname = lolapps.util.multithreading

[logger_uuss_connection]
level = INFO
handlers =
qualname = lolapps.common.uuss.server.connection

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
#format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(thread)d-%(threadName)s] [%(name)s] %(message)s
#Uncomment to see what file/line/func the logging happened on
format =  %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(thread)d-%(threadName)s] [%(name)s] %(message)s (line %(lineno)d %(funcName)s)
datefmt = %Y-%m-%d %H:%M:%S

[logger_dane_userstate]
handlers =
qualname = dane_userstate
propagate = 0
